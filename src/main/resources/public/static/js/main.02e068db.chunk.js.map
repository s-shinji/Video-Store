{"version":3,"sources":["actions/index.js","reducers/index.js","reducers/movies.js","reducers/movie.js","reducers/user.js","reducers/search.js","reducers/auth.js","reducers/registration.js","components/top.js","components/headerB.js","components/login.js","components/RegistrationForm.js","validation/index.js","components/headerA.js","components/reactSlick.js","components/movie_index.js","components/upload.js","components/avatar.js","components/followingModal.js","components/followerModal.js","components/user.js","components/search.js","components/review.js","components/detail.js","components/auth.js","components/result.js","serviceWorker.js","index.js"],"names":["readUser","id","loginUserId","dispatch","a","fetch","mode","then","res","json","response","type","deleteMovie","ids","params","URLSearchParams","append","method","body","postLogin","values","userName","password","credentials","url","combineReducers","movies","action","movie","good","normal","bad","user","search","searchMovie","auth","login","registration","form","Top","props","onSubmit","bind","e","preventDefault","this","history","push","className","to","Component","mapDispatchToProps","connect","HeaderB","Login","document","getElementById","style","display","field","input","placeholder","meta","touched","error","Fragment","color","handleSubmit","pristine","submitting","invalid","marginBottom","htmlFor","Field","name","component","renderField","disabled","state","reduxForm","validate","errors","RegistrationForm","createNewRegistration","style2","email","passwordConfirmation","value","max","msg","length","undefined","reg","match","format","HeaderA","logout","postSearch","postLogout","role","data-toggle","data-target","aria-controls","aria-expanded","aria-label","searchWord","withRouter","SimpleSlider","top5Views","settings","dots","infinite","speed","slidesToScroll","_","map","key","marginTop","fontSize","fontWeight","marginLeft","src","height","width","handleTop5Views","MovieIndex","youtubeLogo","readMovieIndex","prevProps","movieId","arrayDeleteInfo","opacity","setState","handleMovie","style3","paddingTop","paddingBottom","onMouseEnter","onMouseLeave","image","title","userId","avatar","views","console","log","renderMovie","Upload","imageSrc","movieSrc","handleChangeFile1","handleChangeFile2","image_url","window","URL","webkitURL","createObjectURL","target","files","movie_url","hashUpfileInfo","thumbnail","postMovie","encType","controls","accept","capture","onChange","required","formData","FormData","Avatar","handleAccessMyPage","handleAccessOtherUserPage","follow","unfollow","hashFollowInfo","postFollow","hashUnfollowInfo","postUnfollow","hashUpProfileInfo","postProfile","movieUserId","onClick","FollowingModal","handleCloseModalToTrue","clickCloseModal","handleCloseModalToFalse","click","followingUser","fragment","renderFollowingUser","FollowerModal","followerUser","renderFollowerUser","User","selectFollowing","selectFollower","handleOnClick","userInfo","handleUserAndMovie","handleNotMovie","handleNotUserAndMovie","backgroundColor","renderUser","Search","handleSearchResult","text","alt","each","minHeight","renderSearch","Review","review","hashReviewInfo","postReview","myReview","reviewNum","if","renderReview","hashUpReviewInfo","Detail","readMovieDetail","renderDetail","Auth","children","Result","Boolean","location","hostname","store","createStore","reducer","applyMiddleware","thunk","ReactDOM","render","StrictMode","exact","path","navigator","serviceWorker","ready","unregister","catch","message"],"mappings":"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","file":"static/js/main.02e068db.chunk.js","sourcesContent":["import fetch from 'node-fetch'\n// import axios from 'axios'\n\n\n\nexport const READ_MOVIE_INDEX = 'READ_MOVIE_INDEX'\nexport const READ_MOVIE_DETAIL  = 'READ_MOVIE_DETAIL'\nexport const READ_USER   = 'READ_USER'\nexport const READ_UPLOAD = 'READ_UPLOAD'\nexport const POST_PROFILE = 'POST_PROFILE'\nexport const POST_REVIEW = 'POST_REVIEW'\nexport const POST_FOLLOW = 'POST_FOLLOW'\nexport const POST_UNFOLLOW = 'POST_UNFOLLOW'\nexport const SEARCH_MOVIE = 'SEARCH_MOVIE'\nexport const LOGIN = 'LOGIN'\nexport const LOGOUT = 'LOGOUT'\nexport const CREATE_REGISTRATION = 'CREATE_REGISTRATION'\n\n// const ROOT_URL = 'http://localhost:8080/KdiJ362'\nconst REACT_APP_BACKEND_URL = '/KdiJ362'\n// const REACT_APP_BACKEND_URL = 'https://fierce-forest-67177.herokuapp.com'\n\nexport const readMovieIndex = (loginUserId) => async dispatch => {\n  const response = await fetch(`${REACT_APP_BACKEND_URL}/index?loginUserId=${loginUserId}`, {mode: 'cors'}).then(res => res.json())\n  // const response = await fetch(`/home?loginUserId=${loginUserId}`, {mode: 'cors'}).then(res => res.json())\n  dispatch({type: READ_MOVIE_INDEX, response})\n}\n\nexport const readMovieDetail = (id,loginUserId) => async dispatch => {\n  const response = await fetch(`${REACT_APP_BACKEND_URL}/video/${id}?loginUserId=${loginUserId}`, {mode: 'cors'}).then(res => res.json())\n  dispatch({type: READ_MOVIE_DETAIL, response})\n}\n\nexport const readUser = (id,loginUserId) => async dispatch => {\n  const response = await fetch(`${REACT_APP_BACKEND_URL}/user/${id}?loginUserId=${loginUserId}`, {mode: 'cors'}).then(res => res.json())\n  dispatch({type: READ_USER, response})\n}\n\nexport const postMovie = values => async dispatch =>{\n  const formData = new FormData()\n  formData.append('thumbnail', values.thumbnail)\n  formData.append('movie', values.movie)\n  formData.append('title', values.title)\n  formData.append('loginUserId', values.id)\n  await fetch(`${REACT_APP_BACKEND_URL}/upload`, {mode: 'cors', method: 'POST',body:formData})\n  // await fetch(`/upload`, {mode: 'cors', method: 'POST',body:formData})\n}\n\nexport const deleteMovie = ids => async dispatch =>{\n  const params = new URLSearchParams()\n  params.append('movieId', ids[0])\n  params.append('loginUserId', ids[1])\n  await fetch(`${REACT_APP_BACKEND_URL}/delete`, {mode: 'cors',method: 'POST', body:params})\n  // await fetch(`/delete`, {mode: 'cors',method: 'POST', body:params})\n}\n\nexport const postProfile = hashUpProfileInfo => async dispatch => {\n  const formData = new FormData()\n  formData.append(\"avatar\", hashUpProfileInfo.avatar)\n  const response = await fetch(`${REACT_APP_BACKEND_URL}/user/${hashUpProfileInfo.id}`, {mode: 'cors',method: 'POST', body:formData})\n  // const response = await fetch(`/user/${hashUpProfileInfo.id}`, {mode: 'cors',method: 'POST', body:formData})\n  dispatch({type: POST_PROFILE, response})\n}\n\nexport const postReview = hashUpReviewInfo => async dispatch => {\n  const params = new URLSearchParams()\n  params.append(\"review\", hashUpReviewInfo.review)\n  params.append(\"loginUserId\", hashUpReviewInfo.loginUserId)\n  const response = await fetch(`${REACT_APP_BACKEND_URL}/review/${hashUpReviewInfo.movieId}`, {mode: 'cors',method: 'POST', body:params}).then(res => res.json())\n  // const response = await fetch(`/review/${hashUpReviewInfo.movieId}`, {mode: 'cors',method: 'POST', body:params}).then(res => res.json())\n  dispatch({type: POST_REVIEW, response})\n}\nexport const postFollow = hashFollowInfo => async dispatch => {\n  const params = new URLSearchParams()\n  params.append(\"loginUserId\", hashFollowInfo.loginUserId)\n  const response = await fetch(`${REACT_APP_BACKEND_URL}/follow/${hashFollowInfo.userId}`, {mode: 'cors',method: 'POST', body:params}).then(res => res.json())\n  // const response = await fetch(`/follow/${hashFollowInfo.userId}`, {mode: 'cors',method: 'POST', body:params}).then(res => res.json())\n  dispatch({type: POST_FOLLOW, response})\n}\nexport const postUnfollow = hashUnfollowInfo => async dispatch => {\n  const params = new URLSearchParams()\n  params.append(\"loginUserId\", hashUnfollowInfo.loginUserId)\n  const response = await fetch(`${REACT_APP_BACKEND_URL}/followed/${hashUnfollowInfo.userId}`, {mode: 'cors',method: 'POST', body:params}).then(res => res.json())\n  // const response = await fetch(`/followed/${hashUnfollowInfo.userId}`, {mode: 'cors',method: 'POST', body:params}).then(res => res.json())\n  dispatch({type: POST_UNFOLLOW, response})\n}\n\nexport const postSearch = values => async dispatch => {\n  const params = new URLSearchParams()\n  params.append('searchWord', values.searchWord)\n  const response = await fetch(`${REACT_APP_BACKEND_URL}/search`, {mode: 'cors', method: 'POST',body: params}).then(res => res.json())\n  // const response = await fetch(`/search`, {mode: 'cors', method: 'POST',body: params}).then(res => res.json())\n  dispatch({type: SEARCH_MOVIE, response})\n}\n\nexport const postLogin = values => async dispatch => {\n  const params = new URLSearchParams()\n  params.append('userName', values.userName)\n  params.append('password', values.password)\n  let response = await fetch(`/authenticate`, {mode: 'cors', method: 'POST',credentials: 'include',body: params})\n  // let response = await fetch(`/authenticate`, {mode: 'cors', method: 'POST',credentials: 'include',body: params})\n  // if(response.url == \"http://localhost:8080/login-error\") {\n\n  //ElasticIPアドレスを固定してないため、EC2を停止するたびにここの記述は変更する必要あり\n  if(response.url == \"http://52.194.224.178:8080/login-error\") {\n    response = 0;\n  } else {\n    response = await fetch(`/authenticate`, {mode: 'cors', method: 'POST',credentials: 'include',body: params}).then(res => res.json())\n  }\n  dispatch({type: LOGIN, response})\n}\n\nexport const postLogout = () => async dispatch =>{\n  await fetch(`${REACT_APP_BACKEND_URL}/logout`, {mode: 'cors', method: 'POST'})\n  // await fetch(`/logout`, {mode: 'cors', method: 'POST'})\n  const response = 0;\n  dispatch({type: LOGOUT, response})\n}\n\nexport const createNewRegistration = values => async dispatch =>{\n  const params = new URLSearchParams()\n  params.append('name', values.name)\n  params.append('email', values.email)\n  params.append('password', values.password)\n  params.append('passwordConfirmation', values.passwordConfirmation)\n\n  const response = await fetch(`${REACT_APP_BACKEND_URL}/Register`, {mode: 'cors', method: 'POST', body:params}).then(res => res.json())\n  // const response = await fetch(`/Register`, {mode: 'cors', method: 'POST', body:params}).then(res => res.json())\n\n  dispatch({type: CREATE_REGISTRATION, response})\n}\n","import { combineReducers } from 'redux'\nimport movies from './movies'\nimport movie from './movie'\nimport user from './user'\nimport search from './search'\nimport auth from './auth'\nimport registration from './registration'\nimport { reducer as form } from 'redux-form'\n\n\nexport default combineReducers({movies, movie, user, search,auth,registration, form})\n","import _ from 'lodash'\nimport {\n  READ_MOVIE_INDEX,\n} from '../actions'\n\nexport default (movies = {}, action) => {\n  switch(action.type) {\n    case READ_MOVIE_INDEX:\n      return action.response;\n    default:\n      return movies;\n  }\n}","import _ from 'lodash'\nimport {\n  READ_MOVIE_DETAIL,\n  POST_REVIEW\n\n} from '../actions'\n\nexport default (movie = {}, action) => {\n  switch(action.type) {\n    case READ_MOVIE_DETAIL:\n      return action.response;\n    case POST_REVIEW:\n      if(action.response.good == movie[3].good + 1) {\n        //myReviewとレビューの総数の値の変更を反映している\n        return { ...movie, [2]:\"good\",[3]: action.response }\n      } else if(action.response.normal == movie[3].normal + 1) {\n        return { ...movie, [2]:\"normal\",[3]: action.response }\n      } else if(action.response.bad == movie[3].bad + 1) {\n        return { ...movie, [2]:\"bad\",[3]: action.response }\n      } \n    default:\n      return movie;\n  }\n}","import _ from 'lodash'\nimport {READ_USER, POST_PROFILE, POST_FOLLOW, POST_UNFOLLOW} from '../actions'\n\nexport default (user={}, action) => {\n  switch(action.type) {\n    case POST_PROFILE:\n    case READ_USER:\n      return action.response;\n    case POST_FOLLOW:\n    case POST_UNFOLLOW:\n      return {...user, [3]: action.response}\n    default:\n      return user;\n  }\n}","import {SEARCH_MOVIE} from '../actions'\n\nexport default (searchMovie = {}, action) => {\n  switch(action.type) {\n    case SEARCH_MOVIE:\n      return action.response;\n    default:\n      return searchMovie;\n  }\n}","import {LOGIN, LOGOUT} from '../actions'\n\nexport default (login = 0, action) => {\n  switch(action.type) {\n    case LOGIN:\n    case LOGOUT:\n      return action.response;\n    default:\n      return login;\n  }\n}","import {CREATE_REGISTRATION} from '../actions'\n\nexport default (registration = 0, action) => {\n  switch(action.type) {\n    case CREATE_REGISTRATION:\n      return action.response;\n    default:\n      return registration;\n  }\n}","import React from 'react';\nimport { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { postLogin } from '../actions';\nimport { connect } from 'react-redux';\n\n\n\nclass Top extends Component {\n  constructor(props) {\n    super(props)\n    this.onSubmit = this.onSubmit.bind(this)\n  }\n  async onSubmit(e) {\n    e.preventDefault()\n    let values = {}\n    values.userName = \"ゲストユーザ\"\n    values.password = \"guest\"\n    await this.props.postLogin(values)\n    await this.props.history.push('/index')\n  }\n  render() {\n    return(\n      <div className=\"top\">\n        <h1 className=\"topPageH1\">Video Store</h1>\n        <form className=\"topPageH1\" onSubmit={this.onSubmit}>\n          <button className=\"btn btn-lg btn-success btn-block\" type=\"submit\">ゲストユーザでログイン</button>\n        </form>\n        <ul className=\"topPageUl\">\n          <li className=\"upper\">\n            <Link to=\"/index\" className=\"topList\">一覧ページ</Link>\n          </li>\n          <li className=\"lower\">\n            <Link to=\"/login\" className=\"topList\">ログイン</Link>\n            <Link to=\"/RegistrationForm\" className=\"topList\">新規登録</Link>\n          </li>\n        </ul>\n      </div>     \n    )\n  }\n}\n\nconst mapDispatchToProps = ({postLogin})\nexport default connect(null,mapDispatchToProps)(Top);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nconst HeaderB = () => {\n      return(\n        <header>\n          <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\n            <div className=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item active\">\n                  <Link to=\"/index\" className=\"nav-link home\">ホーム <span className=\"sr-only\">(current)</span></Link>\n                </li>\n              </ul>\n            </div>\n          </nav>\n        </header>\n      )\n      \n}\n\nexport default HeaderB;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport HeaderB from './headerB';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm} from 'redux-form'\n\nimport { postLogin } from '../actions'\n\nclass Login extends Component{\n  constructor(props) {\n    super(props)\n    this.onSubmit = this.onSubmit.bind(this)\n  }\n  async onSubmit(values) {\n    await this.props.postLogin(values)\n    if(this.props.loginUserId != 0) {\n      await this.props.history.push('/index')\n    }\n    if(this.props.loginUserId == 0) {\n      document.getElementById(\"loginErrors\").style.display = 'block'\n    }\n  }\n  renderField(field) {\n    const { input, type, id, className, placeholder, style ,meta:{touched,error}} = field\n    const errorStyle = {\n      color:\"red\"\n    }\n\n    return(\n      <React.Fragment>\n        {touched && error && <span style={errorStyle}>{error}</span>}\n        {/* {...input}はname属性を展開している？ */}\n        <input type={type}  {...input} id={id} className={className} placeholder={placeholder} style={style} />\n      </React.Fragment>\n\n    )\n\n  }\n  \n  render() {\n      const {handleSubmit,pristine, submitting, invalid} = this.props\n      const style = {\n        marginBottom: \"10px\"\n      }\n      const style2 = {\n        color:\"red\",\n        display:\"none\"\n      }\n\n      return(\n        <React.Fragment>\n          <HeaderB />\n          <form className=\"form-signin\" onSubmit={handleSubmit(this.onSubmit)}>\n            <h1 className=\"h3 mb-3 font-weight-normal\" id=\"loginTitle\">ログインしてください</h1>\n            <span id=\"loginErrors\" style={style2}>ユーザー名またはパスワードが違います</span>\n            <label htmlFor=\"inputName\" className=\"sr-only\">ユーザー名</label>\n            {/* <input type=\"text\" id=\"inputName user\" name=\"userName\" className=\"form-control\" placeholder=\"ユーザー名\" style={style} required autoFocus /> */}\n            <Field type=\"text\" id=\"inputName user\" name=\"userName\" className=\"form-control\" placeholder=\"ユーザー名\" style={style} component={this.renderField}/>\n\n            <label htmlFor=\"inputPassword\" className=\"sr-only\">パスワード</label>\n            {/* <input type=\"password\" id=\"inputPassword password\"  name=\"password\" className=\"form-control\" placeholder=\"パスワード\" style={style} required /> */}\n            <Field type=\"password\" id=\"inputPassword password\"  name=\"password\" className=\"form-control\" placeholder=\"パスワード\" style={style}  component={this.renderField}/>\n            <button className=\"btn btn-lg btn-success btn-block\" type=\"submit\" disabled={pristine || submitting || invalid}>ログイン</button>\n            <Link to=\"/RegistrationForm\"className=\"btn btn-lg btn-success btn-block\" type=\"submit\">新規登録</Link>\n            <p className=\"mt-5 mb-3 text-muted\">&copy; 2020</p>\n\n          </form>\n        </React.Fragment>\n\n      )\n  }\n      \n}\nconst validate = values => {\n  const errors = {}\n  if(!values.userName) errors.userName = \"ユーザー名を入力してください\"\n  if(!values.password) errors.password = \"パスワードを入力してください\"\n\n  return errors\n}\nconst mapStateToProps = state => ({loginUserId : state.auth})\nconst mapDispatchToProps = ({postLogin})\nexport default connect(mapStateToProps,mapDispatchToProps)(reduxForm({validate, form: 'loginForm'})(Login));\n\n\n","import React, { Component } from 'react';\nimport HeaderB from './headerB';\nimport { Field, reduxForm} from 'redux-form'\nimport {createNewRegistration} from '../actions'\nimport { connect } from 'react-redux';\nimport {maxLength,email} from '../validation'\n\n\nclass RegistrationForm extends Component {\n      constructor(props) {\n        super(props)\n        this.onSubmit = this.onSubmit.bind(this)\n      }\n\n      renderField = (field) => {\n        const { input, type, id, className, placeholder, style , meta: {touched, error}} = field\n        const errorStyle = {\n          color:\"red\"\n        }    \n        return(\n          <React.Fragment>\n            {touched && error && <p style={errorStyle}>{error}</p>}\n            <input type={type}  {...input} id={id} className={className} placeholder={placeholder} style={style} />\n          </React.Fragment>\n        )\n      }\n\n      async onSubmit(values) {\n        await this.props.createNewRegistration(values)\n        if(this.props.registration == 0) {\n        await this.props.history.push('/result')\n        }\n\n      }\n    \n      \n      render() {\n        const style = {\n          marginBottom: \"10px\"\n        }\n        const style2 = {\n          color:\"red\"\n        }\n        const {handleSubmit,pristine, submitting, invalid} = this.props\n  \n        return(\n          <React.Fragment>\n            <HeaderB />\n            <form className=\"form-signin\" action=\"Register\" method=\"POST\" onSubmit={handleSubmit(this.onSubmit)}>\n              <h1 className=\"h3 mb-3 font-weight-normal\">新規登録</h1>\n              {this.props.registration == 1 ? \n              <React.Fragment>\n                <p style={style2}>すでに登録済みのユーザー名です</p>\n                <p style={style2}>すでに登録済みのメールアドレスです</p>\n              </React.Fragment>\n              : \"\"}\n              {this.props.registration == 2 ? \n                <p style={style2}>すでに登録済みのユーザー名です</p>\n              : \"\"}\n              {this.props.registration == 3 ? \n                <p style={style2}>すでに登録済みのメールアドレスです</p>\n              : \"\"}\n              {this.props.registration == 4 ? \n                <p style={style2}>パスワードが一致していません</p>\n              : \"\"}\n              <label htmlFor=\"inputName\" className=\"sr-only\">ユーザー名</label>\n              {/* <input type=\"text\" id=\"inputName\" name=\"name\" className=\"mb-10 form-control\" placeholder=\"ユーザー名(15字以内)\" style={style} required autoFocus /> */}\n              <Field type=\"text\" id=\"inputName\" name=\"name\" className=\"mb-10 form-control\" placeholder=\"ユーザー名(15字以内)\"\n                style={style} component={this.renderField} />\n            \n              <label htmlFor=\"inputEmail\" className=\"sr-only\">Email</label>\n              {/* <input type=\"text\" id=\"inputEmail\" name=\"email\" className=\"mb-10 form-control\" placeholder=\"Email\" style={style} required autoFocus /> */}\n              <Field type=\"text\" id=\"inputEmail\" name=\"email\" className=\"mb-10 form-control\" placeholder=\"Email\" \n                style={style} component={this.renderField} />\n            \n            \n              <label htmlFor=\"inputPassword\" className=\"sr-only\">パスワード</label>\n              {/* <input type=\"password\" id=\"inputPassword\"  name=\"password\" className=\"mb-10 form-control\" style={style} placeholder=\"パスワード\" required /> */}\n              <Field type=\"password\" id=\"inputPassword\"  name=\"password\" className=\"mb-10 form-control\" \n                style={style} placeholder=\"パスワード\" component={this.renderField} />\n            \n              <label htmlFor=\"inputPasswordConfirmation\" className=\"sr-only\">パスワード(確認用)</label>\n              {/* <input type=\"password\" id=\"inputPasswordConfirmation\"  name=\"passwordConfirmation\" className=\"mb-10 form-control\" style={style} placeholder=\"パスワード(確認用)\" required /> */}\n              <Field type=\"password\" id=\"inputPasswordConfirmation\"  name=\"passwordConfirmation\" className=\"mb-10 form-control\" \n                style={style} placeholder=\"パスワード(確認用)\" component={this.renderField}/>\n            \n              <div className=\"checkbox mb-3\">\n              </div>\n              <button className=\"btn btn-lg btn-success btn-block\" type=\"submit\" disabled={pristine || submitting || invalid }>登録</button>\n              <p className=\"mt-5 mb-3 text-muted\">&copy; 2020</p>\n            \n            </form>\n          </React.Fragment>\n        )\n      }\n      \n}\nconst validate = values => {\n  const errors = {}\n\n  if(!values.name) errors.name = \"ユーザー名を入力してください\" \n  if(values.name) errors.name =  maxLength(values.name, 15, '15文字以下で入力してください')\n  if(!values.email) errors.email = \"メールアドレスを入力してください\" \n  if(values.email) errors.email = email(values.email, 'メールアドレスが不正です') \n  if(!values.password) errors.password = \"パスワードを入力してください\" \n  if(!values.passwordConfirmation) errors.passwordConfirmation = \"再度パスワードを入力してください\" \n\n  return errors\n}\nconst mapStateToProps = state => ({registration : state.registration})\nconst mapDispatchToProps = ({createNewRegistration})\nexport default connect(mapStateToProps, mapDispatchToProps)(reduxForm({validate,form: 'registrationForm'})(RegistrationForm));\n\n\n","/**\n * ReduxFormバリデーション用のバリデーションメソッド集\n * 各メソッドは、先頭の引数で入力データを受け取り、undefinedかエラーメッセージを戻す\n */\n \n// 入力必須\nexport const required = (value, msg) => !value ? msg : undefined;\n \n// 数値\n// export const number = (value, msg) => value && isNaN(value) ? msg : undefined;\n \n// 最大文字数\nexport const maxLength = (value, max, msg) => value && value.length > max ? msg : undefined;\n \n// 最小文字数\n// export const minLength = (value, min, msg) => value && value.length < min ? msg : undefined;\n \n// 最大値\n// export const maxNum = (value, max, msg) => value && value > max ? msg : undefined;\n \n// 最小値\n// export const minNum = (value, min, msg) => value && value < min ? msg : undefined;\n \n// フォーマット\nexport const format = (value, reg, msg) => value && !value.match(reg) ? msg : undefined;\n \n// メールアドレス\nexport const email = (value, msg) => format(value, /^[\\w+\\-.]+@[a-z\\d\\-.]+\\.[a-z]+$/i, msg);","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {postSearch,postLogout} from '../actions'\nimport { Field, reduxForm} from 'redux-form'\nimport { withRouter } from 'react-router';\n\n\n\n\n\nclass HeaderA extends Component {\n\n  constructor(props) {\n    super(props)\n    this.onSubmit = this.onSubmit.bind(this)\n    this.logout = this.logout.bind(this)\n  }\n\n  async onSubmit(values) {\n    await this.props.postSearch(values)\n    await this.props.history.push('/search')\n  }\n\n  async logout() {\n    await this.props.postLogout(this.props.loginUserId)\n    await this.props.history.push('/login')\n  }\n\n  renderField(field) {\n    const { input, type} = field\n    return(\n    <input className=\"form-control mr-sm-2\" type={type} placeholder=\"Search\" {...input} />\n    )\n  }\n\n\n  render() {\n    const {handleSubmit} = this.props\n    const loginUserId = this.props.loginUserId\n\n\n    return(\n      <header>\n        <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\n          {/* loginUserIdが存在する場合表示 */}\n          {loginUserId != 0 ?  \n            <form role=\"form\" id=\"logout\" action=\"/logout\" method=\"post\" onSubmit={handleSubmit(this.logout)}>\n              <button type=\"submit\" className=\"navbar-brand\">ログアウト</button>\n            </form>\n          : \"\"}\n          {/* loginUserIdが存在しない場合表示 */}\n          {loginUserId == 0 ? \n            <Link to=\"/login\" id=\"login\">\n              <button type=\"submit\" className=\"navbar-brand\">ログイン</button>\n            </Link>\n          : \"\"}\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\" aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n      \n          <div className=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item active\">\n                <Link to=\"/index\"className=\"nav-link\">ホーム <span className=\"sr-only\">(current)</span></Link>\n              </li>\n              <li className=\"nav-item\">\n                {loginUserId != 0 ? \n                  <Link to=\"/upload\" className=\"nav-link\">投稿</Link>\n                : \"\"}\n              </li>\n              <li className=\"nav-item\">\n                {/* loginUserIdが存在する場合表示 */}\n                {loginUserId != 0 ?\n                  <Link to={`/user/${loginUserId}`} className=\"nav-link\">マイページ</Link>\n                : \"\"}\n              </li>\n            </ul>\n            <form className=\"form-inline my-2 my-lg-0\"  onSubmit={handleSubmit(this.onSubmit)}>\n              {/* <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" name=\"searchWord\" id=\"searchForm\"/> */}\n              <Field name=\"searchWord\" id=\"searchForm\" type=\"text\" component={this.renderField} />\n              <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n            </form>\n          </div>\n        </nav>\n      </header>  \n    )\n  }\n      \n}\nconst mapStateToProps = state => ({loginUserId : state.auth})\nconst mapDispatchToProps = ({postSearch,postLogout})\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(reduxForm({ form: 'searchForm'})(HeaderA)));\n","import React from 'react';\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport _ from 'lodash'\nimport { Link } from 'react-router-dom';\n\nconst handleTop5Views = (top5Views) => {\n  \n  return(\n    _.map(top5Views.value, (value,key) => {\n      const style = {\n        marginTop: \"60px\"\n        \n      }\n      const style2= {\n        fontSize:\"50px\",\n        fontWeight:\"bold\",\n        marginLeft:\"50px\"\n      }\n\n      return(\n        <React.Fragment key={`top5Views${key}`}>\n          <li style={style}>\n            <span style={style2}>{`NO.${key + 1}`}</span>\n            <Link to={`/video/${value[0]}`} className=\"loopLink\">\n              <img src={value[1]} height=\"225px\" width=\"600px\" />\n            </Link>\n          </li>\n        </React.Fragment>\n      )\n\n    })\n  )\n}\n\nexport const SimpleSlider = (top5Views) => {\n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToScroll: 1\n  };\n\n  return (\n    <Slider {...settings}>\n      {handleTop5Views(top5Views)}\n    </Slider>\n  )\n}\n\n","import React, { Component } from 'react';\nimport _ from 'lodash'\nimport { Link } from 'react-router-dom';\nimport HeaderA from './headerA';\nimport { readMovieIndex,deleteMovie } from '../actions' \nimport { connect } from 'react-redux'\nimport { reduxForm} from 'redux-form'\n\nimport {SimpleSlider} from './reactSlick'\n\nclass MovieIndex extends Component{\n  constructor(props) {\n    super(props)\n    this.onSubmit = this.onSubmit.bind(this)\n    this.state = {\n      youtubeLogo: null\n    }\n  }\n  \n  componentDidMount () {\n    this.props.readMovieIndex(this.props.loginUserId)\n  }\n  \n  //deleteの反映で必要\n  componentDidUpdate (prevProps) {\n    if(this.props.movies[0] != prevProps.movies[0] ) {\n      this.props.readMovieIndex(this.props.loginUserId)\n    }\n  }\n\n\n  async onSubmit(movieId) {\n    let arrayDeleteInfo = []\n    arrayDeleteInfo.push(movieId)\n    arrayDeleteInfo.push(this.props.loginUserId)\n    await this.props.deleteMovie(arrayDeleteInfo)\n    await this.props.history.push(\"/index\")\n\n  }\n  renderField(field) {\n    const {input, type, value} = field\n    return(\n      <input {...input} type={type} value={value}/>\n    )\n  }\n\n  onMouseEnter(key) {\n    document.getElementById(`imgSrc_${key}`).style.opacity = '0.8'\n    this.setState({\n      youtubeLogo: key\n    })\n  }\n\n  onMouseLeave(key) {\n    document.getElementById(`imgSrc_${key}`).style.opacity = '1.0'\n    this.setState({\n      youtubeLogo: null\n    })\n  }\n\n\n  renderMovie() {\n    const props = this.props\n    const loginUserId = props.loginUserId\n    const {handleSubmit} = props\n\n    const handleMovie = _.map(props.movies[0],(value,key) => {\n      const style3 ={\n        paddingTop:\"15px\",\n        paddingBottom:\"15px\"\n      }\n      return(\n          <React.Fragment key={`movieList${key}`}>\n            <div style={style3}>\n              <Link to={`/video/${value.id}`} className=\"movieLink jsMovie2\" id={key}>\n                <div className=\"thumbnailBox\" id={`imgSrc_${key}`} onMouseEnter={() => this.onMouseEnter(key)} onMouseLeave={() => this.onMouseLeave(key)}>\n                  <img src={value.image.image} height=\"150px\" width=\"300px\" className=\"movieIndex\" id=\"hoverChange\" />\n                  {this.state.youtubeLogo == key ? <i className='fab fa-youtube'></i> :\"\"}\n                </div>\n                <div className=\"movieTitle\">{value.title}</div>\n              </Link>\n      \n              <div className=\"indexInfo\">\n                <div>\n                  <Link to={`/user/${value.userId}`} className=\"postUserName\" style={style3}>\n                    <img src={value.user.avatar} className=\"upAvatar\" height=\"50px\" width=\"50px\" />\n                    <span id=\"postUser\">投稿者:{value.user.name}</span>\n                  </Link>\n                </div>\n                <div>\n                  <label htmlFor = \"views\">再生回数:</label>\n                  <span id=\"views\">{`${value.views}回`}</span>\n                </div>\n              </div>\n              {/* <!-- 現在ログイン中のユーザーと動画投稿者が同じな場合、削除ボタンを表示する --> */}\n              {loginUserId == value.userId &&\n                <form onSubmit={handleSubmit(() => this.onSubmit(value.id))}>\n                  {/* <!-- このname属性が@RequestParamで受け取る際のキーになる（受け取る値はvalue属性） --> */}\n                  <input type=\"hidden\" name=\"movieId\" value={value.id} />\n                  {/* <Field type=\"hidden\" name=\"movieId\" value={value.id} component={this.renderField}/> */}\n                  {/* <input type=\"hidden\" name=\"loginUserId\" value={loginUserId} /> */}\n                  {/* <Field type=\"hidden\" name=\"loginUserId\" value={loginUserId} component={this.renderField}/> */}\n                  <input type=\"submit\" value=\"削除\" className=\"deleteBtn\" />\n                </form>    \n              }\n            </div>\n\n          </React.Fragment>\n        \n      )\n      \n    })\n\n    return (\n      <main role=\"main\" className=\"mainBackground\">\n        <div id=\"loopSlide\">\n          <ul className=\"jsMovie1\">\n            <SimpleSlider value={this.props.movies[1]} />\n          </ul>\n        </div>\n        <div className=\"images\">\n          <div className=\"image\">\n            {handleMovie}\n          </div>\n        </div>\n      </main>    \n    )\n\n  }\n \n  render() {\n    console.log(this.props.movies)\n    return (\n      <React.Fragment>\n        <HeaderA />\n        {this.renderMovie()}\n      </React.Fragment>\n    );\n  }\n}\n\n//オブジェクト(ハッシュ)を返す場合は戻り値に()が必要??\nconst mapStateToProps = state => ({movies : state.movies,loginUserId : state.auth})\n\nconst mapDispatchToProps = ({readMovieIndex,deleteMovie})\nexport default connect(mapStateToProps, mapDispatchToProps)(reduxForm({form: 'deleteMovieForm'})(MovieIndex));\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {reduxForm} from 'redux-form'\nimport {postMovie} from '../actions'\nimport HeaderA from './headerA';\n\n\n\nclass Upload extends Component {\n  constructor(props) {\n    super(props)\n    this.state={\n      imageSrc: null,\n      movieSrc: null\n    }\n    this.handleChangeFile1 = this.handleChangeFile1.bind(this)\n    this.handleChangeFile2 = this.handleChangeFile2.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n  }\n\n  handleChangeFile1(e) {\n    const createObjectURL = (window.URL || window.webkitURL).createObjectURL || window.createObjectURL;\n    // ①イベントからfileの配列を受け取る\n    const files = e.target.files;\n\n    // ②createObjectURLで、files[0]を読み込む\n    const image_url = createObjectURL(files[0]);\n    // ③setStateする！\n    this.setState({imageSrc: image_url});\n  }\n\n  handleChangeFile2(e) {\n    document.getElementById(\"uploadSubmitBtn\").disabled = false\n\n    const createObjectURL = (window.URL || window.webkitURL).createObjectURL || window.createObjectURL;\n    // ①イベントからfileの配列を受け取る\n    const files = e.target.files;\n\n    // ②createObjectURLで、files[0]を読み込む\n    const movie_url = createObjectURL(files[0]);\n\n    // ③setStateする！\n    this.setState({movieSrc: movie_url});\n  }\n\n  async onSubmit(e) {\n    e.preventDefault()\n    let hashUpfileInfo = {}\n\n    //ファイルがundefinedだとサーバとの接続がうまくいかないため、サムネイル画像の選択がなかった場合には動画と同じファイルを代入しサーバ側で分岐処理を行う\n    hashUpfileInfo.thumbnail=document.getElementById(\"upfile2\").files[0] ? document.getElementById(\"upfile2\").files[0] : document.getElementById(\"upfile\").files[0]\n    hashUpfileInfo.movie=document.getElementById(\"upfile\").files[0]\n    hashUpfileInfo.title=document.getElementById(\"upfileTitle\").value\n    hashUpfileInfo.id=document.getElementById(\"upfileId\").value\n\n    await this.props.postMovie(hashUpfileInfo)\n    await this.props.history.push('/index')\n\n  }\n\n  render() {\n    // const {handleSubmit} = this.props\n    const loginUserId = this.props.loginUserId\n    const style = {\n      display: \"block\",\n      width: \"500px\"\n    }\n\n    return(\n      <React.Fragment>\n        <HeaderA />\n        <form encType=\"multipart/form-data\" className=\"uploadForm\" onSubmit={this.onSubmit}>\n          <div className=\"previewBox\">\n              <div id=\"preview\">\n                {this.state.imageSrc ? <img id=\"thumbnail_${index}\" src={this.state.imageSrc} className=\"thumbnail\" controls /> : \"\"}\n              </div>\n              <div id=\"preview2\">\n                {this.state.movieSrc ? <video id=\"movie_${index}\" src={this.state.movieSrc} className=\"movie\"  controls /> : \"\"}\n              </div>\n          </div>\n          <div className=\"uploadFlex\">\n              <div className=\"uploadFlex2\">\n                  <label htmlFor=\"upfile2\" className=\"uploadBox\">\n                      <input type=\"file\" name=\"thumbnail\" id =\"upfile2\" accept=\"image/*\" capture=\"camera\" onChange={this.handleChangeFile1}/>\n                      {/* <Field type=\"file\" name=\"thumbnail\" id =\"upfile2\" accept=\"image/*\" capture=\"camera\" onChange={this.handleChangeFile1} component={this.renderField}/> */}\n                      <div className=\"uploadParts\"><span>サムネイル</span></div>\n                      <i className=\"far fa-image\"></i>\n                  </label>\n\n                  <label htmlFor=\"upfile\" className=\"uploadBox\">\n                      <input type=\"file\" name=\"movie\"  id =\"upfile\" accept=\"video/*\" capture=\"camera\" onChange={this.handleChangeFile2}/>\n                      {/* <Field type=\"file\" name=\"movie\"  id =\"upfile\" accept=\"video/*\" capture=\"camera\" onChange={this.handleChangeFile2} component={this.renderField} /> */}\n                      <div className=\"uploadParts\"><span>動画</span></div>\n                      <i className=\"fas fa-video\"></i>\n                  </label>\n              </div>\n              \n              <div className=\"uploadTitle\">\n                  <span style={style}>タイトル:</span>\n                  <input type=\"text\" name=\"title\"  id=\"upfileTitle\" placeholder=\"１〜５０字以内\" style={style} required />\n                  {/* <Field type=\"text\" name=\"title\"  placeholder=\"１〜５０字以内\" style={style} required component={this.renderField}/> */}\n              </div>\n              <div className=\"uploadId\">\n                <input type=\"hidden\" name=\"loginUserId\" id=\"upfileId\" value={loginUserId}/>\n              </div>\n\n              <br /> <input className=\"uploadSubmit\" id=\"uploadSubmitBtn\" type=\"submit\" value=\"送信する\" disabled={true}/>\n          </div>\n        </form>\n      </React.Fragment>\n  \n    )\n  }\n\n      \n}\nconst mapStateToProps = state => ({loginUserId : state.auth})\nconst mapDispatchToProps = ({postMovie})\nexport default connect(mapStateToProps, mapDispatchToProps)(reduxForm({ form: 'uploadForm'})(Upload));\n\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm} from 'redux-form'\nimport {postProfile, postFollow, postUnfollow} from  '../actions'\nimport { withRouter } from 'react-router';\n// import { Redirect } from 'react-router-dom';\n\n\n\n\n\nclass Avatar extends Component {\n  constructor(props) {\n    super(props)\n    this.handleAccessMyPage = this.handleAccessMyPage.bind(this)\n    this.handleAccessOtherUserPage = this.handleAccessOtherUserPage.bind(this)\n    this.follow = this.follow.bind(this)\n    this.unfollow = this.unfollow.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n    this.onChange = this.onChange.bind(this)\n  }\n\n  async follow() {\n    let hashFollowInfo = {}\n    hashFollowInfo.userId = this.props.user[2].id\n    hashFollowInfo.loginUserId = this.props.loginUserId\n    await this.props.postFollow(hashFollowInfo)\n  }\n  async unfollow() {\n    let hashUnfollowInfo = {}\n    hashUnfollowInfo.userId = this.props.user[2].id\n    hashUnfollowInfo.loginUserId = this.props.loginUserId\n    await this.props.postUnfollow(hashUnfollowInfo)\n  }\n  async onSubmit() {\n    let hashUpProfileInfo = {}\n    hashUpProfileInfo.avatar = document.getElementById(\"upAvatar\").files[0]\n    hashUpProfileInfo.id = this.props.user[2].id\n    await this.props.postProfile(hashUpProfileInfo)\n    await this.props.history.push(`/user/${this.props.user[2].id}`)\n  }\n\n  async onChange() {\n    document.getElementById('avatarUpdateBtn').disabled = false;\n  }\n\n  handleAccessMyPage(){\n    const style = {\n      display:\"none\"\n    }\n\n    const user = this.props.user\n    const loginUserId = this.props.loginUserId\n    const movieUserId = user[2] ? user[2].id : \"\"\n\n    const {handleSubmit} = this.props\n  \n    if(movieUserId == loginUserId) {\n      return(\n        /*本番環境で？babelの影響？によって「//」のコメントアウトがあるとエラーが発生するため「/*」で対応*/\n        /*ログインユーザーが自らのユーザーページを訪れた場合*/\n        <div>\n          <form encType=\"multipart/form-data\" onSubmit={handleSubmit(this.onSubmit)}>\n  \n            <label htmlFor=\"upAvatar\" className=\"upAvatarBox\">\n              <img src=\"\" src={user[2] ? user[2].avatar : \"\"} alt=\"\" className=\"upAvatar\" height=\"200px\" width=\"200px\" />\n              <input type=\"file\" id=\"upAvatar\" style={style} name=\"avatar\"  accept=\"image/*\" onChange={this.onChange}/> \n              {/* <Field type=\"file\" id=\"upAvatar\" style={style} name=\"avatar\"  accept=\"image/*\" component={this.renderField}/>  */}\n            </label>\n            <input type=\"submit\" value=\"更新\" className=\"deleteBtn\"  id=\"avatarUpdateBtn\" disabled={true}/>\n          </form>\n        </div>\n      )\n    }\n  }\n  \n  handleAccessOtherUserPage() {\n    const user = this.props.user\n    const loginUserId = this.props.loginUserId\n    const movieUserId = user[2] ? user[2].id : \"\"\n    const {handleSubmit} = this.props\n\n    if(movieUserId != loginUserId) {\n      return(\n        /*本番環境で？babelの影響？によって「//」のコメントアウトがあるとエラーが発生するため「/*」で対応*/\n        /*ログインユーザーが他のユーザーページを訪れた場合*/\n        <div>\n          <label htmlFor=\"upAvatar\" className=\"upAvatarBox\">\n            <img src=\"\" src={user[2] ? user[2].avatar : \"\"} alt=\"\" className=\"upAvatar\" height=\"200px\" width=\"200px\" />\n          </label>\n          {loginUserId != 0 ?\n            <div className=\"followBox\">\n              { user[3] == false ? <button className=\"followBtn\" onClick={handleSubmit(this.follow)}> フォローする </button> : \"\"}\n              { user[3] == true ? <button className=\"followedBtn\" onClick={handleSubmit(this.unfollow)}> フォロー中 </button> : \"\" }\n            </div>\n          : \"\" }\n        </div>\n      )\n    }\n  }\n  \n  render() {\n    return(\n      <React.Fragment>\n        {this.handleAccessMyPage()}\n        {this.handleAccessOtherUserPage()}\n      </React.Fragment>\n    )\n    }\n}\nconst mapStateToProps = state => ({user : state.user,loginUserId : state.auth})\nconst mapDispatchToProps  = ({postProfile,postFollow,postUnfollow})\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(reduxForm({form: \"profileForm\"})(Avatar)));","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { readUser } from '../actions'\nimport _ from 'lodash'\nimport { Link } from 'react-router-dom';\n\nclass FollowingModal extends Component {\n  constructor(props) {\n    super(props)\n    this.state= {\n      clickCloseModal: false,\n    }\n    this.click = this.click.bind(this)\n  }\n\n  //clickはbindしている\n  //onClickで複数の処理を実行するため\n  click() {\n    this.handleCloseModalToTrue()\n    this.props.onClick()\n  }\n  //アロー関数の場合、bind必要ない？\n  handleCloseModalToTrue = () => this.setState({clickCloseModal: true})\n  handleCloseModalToFalse = () => this.setState({clickCloseModal: false})\n\n  renderFollowingUser(){\n    const props = this.props\n    const followingUser = _.map(props.user[5], (value,key) => {\n      return(\n        <div className=\"followUserBox\" key={`followingUser${key}`}>\n          <Link to={`/user/${value.id}`} className=\"followEach\" onClick={this.click}>\n            <img src={value.avatar} className=\"followAvatar\" />\n            <span className=\"followName\">{value.name}</span>\n          </Link>\n        </div>\n      )\n    })\n    return( \n      <React.Fragment>\n        {followingUser}\n      </React.Fragment>\n    )\n  }\n  \n  render() {\n    if(this.state.clickCloseModal == false) {\n      return(\n        <div fragment=\"following\" className=\"modalBackground\" id=\"followingModal\">\n          <div className=\"modal\">\n            {this.renderFollowingUser()}\n            <i className=\"fas fa-times closeModal\" onClick={this.click}></i>\n          </div>\n        </div>\n      )\n    } else {\n      return(\n        <React.Fragment>\n          {this.handleCloseModalToFalse}\n        </React.Fragment>\n      ) \n    }\n  }\n}\n\nconst mapStateToProps = state => ({user : state.user})\nconst mapDispatchToProps = ({readUser})\nexport default connect(mapStateToProps, mapDispatchToProps)(FollowingModal);\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { readUser } from '../actions'\nimport _ from 'lodash'\nimport { Link } from 'react-router-dom';\n\nclass FollowerModal extends Component {\n  constructor(props) {\n    super(props)\n    this.state= {\n      clickCloseModal: false,\n    }\n    this.handleCloseModalToFalse = this.handleCloseModalToFalse.bind(this)\n    this.click = this.click.bind(this)\n  }  \n  \n  //clickはbindしている\n  //onClickで複数の処理を実行するため\n  click() {\n    this.handleCloseModalToTrue()\n    this.props.onClick()\n  }\n  //アロー関数の場合、bind必要ない？\n  handleCloseModalToTrue = () => this.setState({clickCloseModal: true})\n  handleCloseModalToFalse = () => this.setState({clickCloseModal: false})\n\n  renderFollowerUser(){\n    const props = this.props\n    const followerUser = _.map(props.user[6], (value,key) => {\n      return(\n        <div className=\"followUserBox\" key={`followerUser${key}`}>\n          <Link to={`/user/${value.id}`} className=\"followEach\" onClick={this.click}>\n            <img src={value.avatar} className=\"followAvatar\" />\n            <span className=\"followName\">{value.name}</span>\n          </Link>\n        </div>\n      )\n    })\n    return( \n      <React.Fragment>\n        {followerUser}\n      </React.Fragment>\n    )\n\n  }\n\n  render() {\n    if(this.state.clickCloseModal == false){\n      return(\n        <div className=\"modalBackground\" id=\"followerModal\">\n          <div className=\"modal\">\n          {this.renderFollowerUser()}\n          <i className=\"fas fa-times closeModal\" onClick={this.click}></i>\n          </div>\n        </div>\n      )\n    } else {\n      return(\n        <React.Fragment>\n          {this.handleCloseModalToFalse}\n        </React.Fragment>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => ({user : state.user})\nconst mapDispatchToProps = ({readUser})\nexport default connect(mapStateToProps, mapDispatchToProps)(FollowerModal);\n\n","import React, {Component} from 'react';\nimport _ from 'lodash'\nimport HeaderA from './headerA';\nimport Avatar from './avatar'\nimport FollowingModal from './followingModal'\nimport FollowerModal from './followerModal'\nimport { connect } from 'react-redux';\nimport { readUser } from '../actions'\n\n// import axios from 'axios'\n// import $ from 'jquery'\n\nclass User extends Component{\n  constructor(props) {\n    super(props)\n    this.state = {Component: null}\n    this.selectFollowing = this.selectFollowing.bind(this)\n    this.selectFollower  = this.selectFollower.bind(this)\n    this.handleOnClick   = this.handleOnClick.bind(this)\n  }\n  componentDidMount () {\n    const id = this.props.match.params.id\n    const loginUserId = this.props.loginUserId\n    this.props.readUser(id,loginUserId)\n  }\n\n  componentDidUpdate (prevProps) {\n    //profileが更新された際に返されるレスポンスでuserステートを更新(そのため、レスポンスのstatusを指定することで200が返って来るはず)\n    //本来、this.props.user[2] != prevProps.user[2]のように異なった場合にupdateするはずだが、常に異なった状態で無限ループに陥るため==に変更(更新の際、一瞬undifinedになるため==だと一度だけ更新してくれる？)\n    if(this.props.user[2] == prevProps.user[2]) {\n      const id = this.props.match.params.id\n      const loginUserId = this.props.loginUserId\n      this.props.readUser(id,loginUserId)\n    }\n  }\n\n  selectFollowing = () => this.setState({Component: FollowingModal})\n  selectFollower  = () => this.setState({Component: FollowerModal})\n  handleOnClick   = () => this.setState({Component: null})\n\n  \n  renderUser() {\n    const handleUserAndMovie = (userInfo) => {\n      {/* // <!-- ユーザーが存在し且つ動画も存在する場合 --> */}\n      if(userInfo[0]){  //動画が存在する場合の条件式\n        return(\n          <div className=\"userBox\">\n            \n            <Avatar />\n\n            <div className=\"boxParts userName\">{userInfo[2] ? userInfo[2].name : \"\"}</div>\n        \n            {/* <!-- フォロー表示 --> */}\n            <div className=\"followInfoBox\">\n              <div className=\"followInfo followingInfo\" onClick={this.selectFollowing}>フォロー</div>\n              <div className=\"followInfo followerInfo\" onClick={this.selectFollower}>フォロワー</div>\n            </div>\n            \n            <video src={userInfo[0]} height=\"280px\" width=\"500px\" controls></video>\n            <div className=\"boxParts\">{userInfo[2] ? userInfo[2].title : \"\"}</div>\n          </div>\n        )\n      }\n    }\n\n    const handleNotMovie = (userInfo) => {\n        {/* // <!-- ユーザーは存在するが動画は存在しない場合 --> */}\n        if(userInfo[0] === \"\" && userInfo[2] ? userInfo[2].name != null : \"\") {\n          return(\n            <div className=\"userBox\">\n\n              <Avatar />\n              \n              <div className=\"boxParts userName\">{userInfo[2] ? userInfo[2].name : \"\"}</div>\n          \n              {/* <!-- フォロー表示 --> */}\n              <div className=\"followInfoBox\">\n                <div className=\"followInfo followingInfo\" onClick={this.selectFollowing}>フォロー</div>\n                <div className=\"followInfo followerInfo\"  onClick={this.selectFollower}>フォロワー</div>\n              </div>\n              \n            </div>\n          )\n        }\n      }\n\n      const handleNotUserAndMovie = (userInfo) => {\n        {/* // <!-- ユーザーが存在しない場合 --> */}\n        if(userInfo[2] ? userInfo[2].name == null : \"\") {\n          return(\n            <div>\n              <div className=\"noUser\">\"指定のユーザーは見つかりませんでした\"</div>\n            </div>\n            )\n        }\n      } \n\n      const props = this.props\n      console.log(props)\n      //{}は必要\n      const {Component} = this.state;\n      return (\n      <React.Fragment>\n        {Component && <Component onClick={this.handleOnClick}/>}\n        {/* // <!-- ユーザーが存在し且つ動画も存在する場合 --> */}\n        {handleUserAndMovie(props.user)}\n\n        {/* // <!-- ユーザーは存在するが動画は存在しない場合 --> */}\n        {handleNotMovie(props.user)}\n      \n        {/* // <!-- ユーザーが存在しない場合 --> */}\n        {handleNotUserAndMovie(props.user)}\n      </React.Fragment>\n       \n    )\n\n  }\n \n  render() {\n    const style = {\n      marginTop: \"60px\",\n      backgroundColor:\"#e9ecef\",\n      height: \"92vh\"\n    }\n    return (\n      <React.Fragment>\n        <HeaderA />\n        <div style={style}>{this.renderUser()}</div>\n      </React.Fragment>\n    );\n  }\n}\nconst mapStateToProps = state => ({user : state.user,loginUserId : state.auth})\nconst mapDispatchToProps = ({readUser})\nexport default connect(mapStateToProps, mapDispatchToProps)(User);\n\n\n","import React, { Component } from 'react';\nimport _ from 'lodash'\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport HeaderA from './headerA';\n\n\nclass Search extends Component{\n  constructor(props) {\n    super(props)\n    this.state = {\n      youtubeLogo: null\n    }\n  }\n\n  onMouseEnter(key) {\n    document.getElementById(`imgSrc2_${key}`).style.opacity = '0.8'\n    this.setState({\n      youtubeLogo: key\n    })\n  }\n\n  onMouseLeave(key) {\n    document.getElementById(`imgSrc2_${key}`).style.opacity = '1.0'\n    this.setState({\n      youtubeLogo: null\n    })\n  }\n\n\n\n  renderSearch() {\n    const props = this.props\n\n    const style = {\n      display:\"block\"\n    } \n    const style2 ={\n      paddingTop:\"20px\",\n    }\n    const style3 ={\n      marginBottom:\"30px\"\n    }\n\n    const handleSearchResult = _.map(props.search[0], (value,key) => {\n      return(\n        <div key={`searchResult${key}`} style={style3}>\n          <Link to={`/video/${value.id}`} className=\"movieLink\" >\n            {/* onMouseEnter={this.onMouseEnter(key)}だと無限ループに陥ってしまうため、onMouseEnter={() => this.onMouseEnter(key)}にしている(詳しくはメモに書いている) */}\n            <div className=\"thumbnailBox\" id={`imgSrc2_${key}`} onMouseEnter={() => this.onMouseEnter(key)} onMouseLeave={() => this.onMouseLeave(key)}>\n              <img src={value.image.image} height=\"150px\" width=\"300px\" className=\"movieIndex\" />\n              {this.state.youtubeLogo == key ? <i className='fab fa-youtube'></i> :\"\"}\n            </div>\n    \n            <div text={value.title} className=\"movieTitle\">{value.title}</div>\n          </Link>\n\n          <div className=\"indexInfo\">\n            <div>\n              {/* <!-- 動画投稿者はmovieのインデックス3に入っている --> */}\n              <Link  to={`/user/${value.userId}`} className=\"postUserName\"  style={style}>\n                <img src=\"\" alt=\"\" src={value.user.avatar} className=\"upAvatar\" height=\"50px\" width=\"50px\" />\n                <span id=\"postUser\" text={value.user.name}>投稿者:{value.user.name}</span>\n              </Link>\n            </div>\n\n            <div>\n              <span id=\"views\" text={`${value.views}回`}>再生回数:{value.views}回</span>\n            </div>\n          </div>\n        </div>\n      )\n\n    })\n    return (\n      <React.Fragment>\n        {props.search[1] == 0 ? <div className=\"noMovie\" style={style2}>指定の動画は見つかりませんでした</div> : \"\"}\n\n        <div className=\"images\" style={style2}>\n          <div each= \"movie, movieStat:${searchResultList}\" className=\"image\">\n            {handleSearchResult}\n          </div>\n        </div>\n\n      </React.Fragment>\n    )\n\n  }\n \n  render() {\n    const style = {\n      marginTop: \"60px\",\n      minHeight: \"95vh\"\n    }\n    return (\n      <React.Fragment>\n        <HeaderA />\n        <div className=\"mainBackground\" style={style}>{this.renderSearch()}</div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({search : state.search})\nexport default connect(mapStateToProps,null)(Search);\n\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm} from 'redux-form'\nimport {postReview} from  '../actions'\nimport { withRouter } from 'react-router';\n\nclass Review extends Component {\n\n  async onSubmit(review) {\n    let hashReviewInfo = {}\n    hashReviewInfo.review = review\n    hashReviewInfo.movieId = this.props.movie[1].id\n    hashReviewInfo.loginUserId = this.props.loginUserId\n    await this.props.postReview(hashReviewInfo)\n  }\n\n  renderReview() {\n    const props = this.props\n    const movieId = props.movie[1] ? props.movie[1].id : \"\"\n    const movieUserId = props.movie[1] ? props.movie[1].user.id : \"\"\n    const loginUserId = props.loginUserId\n    const myReview = props.movie[2] ? props.movie[2] : \"\"\n    const reviewNum = props.movie[3] ? props.movie[3] : \"\"\n    // const {handleSubmit} = props\n\n    const style2 = {\n      color:\"#28a745\"\n    }\n\n    {/* <!-- ログインユーザーと投稿者が等しいまたはログインしていない場合 --> */}\n    if(loginUserId == movieUserId || loginUserId == 0){\n      return(\n        <div className=\"review\">\n          <div className=\"reviewIcon\">\n            <i className=\"far fa-grin-squint\"></i>\n            <span className=\"reviewCount\">{reviewNum.good}</span>\n          </div>\n          <div className=\"reviewIcon\">\n            <i className=\"far fa-smile\"></i>\n            <span className=\"reviewCount\">{reviewNum.normal}</span>\n          </div>\n          <div className=\"reviewIcon\">\n            <i className=\"far fa-sad-tear\"></i>\n            <span className=\"reviewCount\">{reviewNum.bad}</span>\n          </div>\n        </div>\n      )\n      {/* <!-- ログインユーザーと投稿者が等しくない場合はリンク化 --> */}\n    } else if(loginUserId != movieId && loginUserId != 0) {\n      return(\n        <div className=\"review\">\n          {/* <!-- 既にreview済みかどうかで分岐 --> */}\n          {/* 三項演算子でequals文がうまくいかないため「==」で代用 */}\n          {myReview == \"good\" ? \n            <div className=\"reviewIcon reviewLink link1 ajax_btn1\" style={style2}>\n              <i className=\"far fa-grin-squint\"></i>\n              <span className=\"reviewCount1\">{reviewNum.good}</span>\n            </div>\n          :\n            <div name=\"formName1\" onClick={() => this.onSubmit('good')}>\n              <a className=\"reviewIcon reviewLink link1 ajax_btn1\">\n                <i className=\"far fa-grin-squint\"></i>\n                <span className=\"reviewCount1\">{reviewNum.good}</span>       \n              </a>\n              {/* <input type=\"hidden\" name=\"review\" value=\"good\" className=\"sendReview1\" /> */}\n            </div>\n          }\n\n          {/* <!-- 既にreview済みかどうかで分岐 --> */}\n          {myReview == \"normal\" ? \n            <div className=\"reviewIcon reviewLink link2 ajax_btn2\" style={style2}>\n              <i className=\"far fa-smile\"></i>\n              <span className=\"reviewCount2\">{reviewNum.normal}</span>\n            </div>\n          :\n            <div name=\"formName2\" onClick={() => this.onSubmit('normal')}>\n              <a className=\"reviewIcon reviewLink link2 ajax_btn2\">\n                <i className=\"far fa-smile\"></i>\n                <span className=\"reviewCount2\">{reviewNum.normal}</span>\n              </a>\n              {/* <input type=\"hidden\" name=\"review\" value=\"normal\" className=\"sendReview2\" /> */}\n            </div>\n          }\n\n          {/* <!-- 既にreview済みかどうかで分岐 --> */}\n          {myReview == \"bad\" ? \n            <div if=\"${matchReview.equals('bad')}\" className=\"reviewIcon reviewLink link3 ajax_btn3\" style={style2}>\n              <i className=\"far fa-sad-tear\"></i>\n              <span className=\"reviewCount3\">{reviewNum.bad}</span>\n            </div>\n          :\n            <div name=\"formName3\" onClick={() => this.onSubmit('bad')}>\n              <a className=\"reviewIcon reviewLink link3 ajax_btn3\">\n                <i className=\"far fa-sad-tear\"></i>\n                <span className=\"reviewCount3\">{reviewNum.bad}</span>\n              </a>   \n              {/* <input type=\"hidden\" name=\"review\" value=\"bad\" className=\"sendReview3\" /> */}\n            </div>\n            }\n        </div>\n      )\n    }\n  }\n\n  render() {\n    return(\n      <React.Fragment>\n        {this.renderReview()}\n      </React.Fragment>\n    )\n    }\n}\nconst mapStateToProps = state => ({movie : state.movie,loginUserId : state.auth})\nconst mapDispatchToProps  = ({postReview})\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(reduxForm({form: \"reviewForm\"})(Review)));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash'\nimport HeaderA from './headerA';\nimport Review from './review';\nimport { readMovieDetail,deleteMovie } from '../actions' \nimport { Link } from 'react-router-dom';\nimport { reduxForm} from 'redux-form'\n\nclass Detail extends Component{\n\n  componentDidMount () {\n    const id = this.props.match.params.id\n    const loginUserId = this.props.loginUserId\n    this.props.readMovieDetail(id,loginUserId)\n  }\n  async onSubmit(movieId) {\n    let arrayDeleteInfo = []\n    arrayDeleteInfo.push(movieId)\n    arrayDeleteInfo.push(this.props.loginUserId)\n    await this.props.deleteMovie(arrayDeleteInfo)\n    await this.props.history.push(\"/index\")\n  }\n  // 動画情報に関する関数\n  renderDetail() {\n    const props = this.props\n    {/* avatarやnameの部分までが読み込まれる前にレンダリングされてしまうため、条件分岐を入れて読み込んでから処理を進めるようにしている？(https://qiita.com/uemuram/items/553b897913d44b92b70a) */}\n    const movieId     = props.movie[1] ? props.movie[1].id : \"\"\n    const userName    = props.movie[1] ? props.movie[1].user.name : \"\"\n    const avatar      = props.movie[1] ? props.movie[1].user.avatar : \"\"\n    const movieUserId = props.movie[1] ? props.movie[1].user.id : \"\"\n    const views       = props.movie[1] ? props.movie[1].views : \"\"\n    const loginUserId   = props.loginUserId\n    const {handleSubmit} = props\n    const style = {\n      display:\"block\"\n    }\n    const style3 = {\n      marginTop: \"60px\",\n      height:\"92vh\"\n    }\n    return (\n    <div role=\"main\" className=\"mainBackground\" style={style3}>\n\n      <div className=\"detail\">\n        {/* <!-- props.movie[0]に動画のsrc情報が入っている --> */}\n        <video src={props.movie[0]} height=\"500px\" width=\"100%\" className=\"movieDetail\" controls></video>\n\n        <div className=\"detailInfo\" >\n          <div>\n            {/* <!-- props.movie[1]に動画やユーザーに関する情報が入っている --> */}\n            <Link  to={`/user/${movieUserId}`} className=\"postUserName\" style={style}>\n              {/* <span>{this.state.detailMovieInfo[0]}</span> */}\n              {/* avatarやnameの部分までが読み込まれる前にレンダリングされてしまうため、条件分岐を入れて読み込んでから処理を進めるようにしている？(https://qiita.com/uemuram/items/553b897913d44b92b70a) */}\n              <img src={avatar} className=\"upAvatar\" height=\"50px\" width=\"50px\" />\n              <span id=\"postUser\">投稿者: {userName}</span>\n            </Link>\n          </div>\n\n          <div>\n            <span id=\"views\">{`再生回数: ${views}回`}</span>\n          </div>\n          {/* Review情報に関する関数呼び出し */}\n          <Review />\n\n        </div>\n\n        {/* <!-- 現在ログイン中のユーザーと動画投稿者が同じな場合、削除ボタンを表示する --> */}\n        {loginUserId == movieUserId &&\n          <form onSubmit={handleSubmit(() => this.onSubmit(movieId))}>\n            {/* <!-- このname属性が@RequestParamで受け取る際のキーになる（受け取る値はvalue属性） --> */}\n            <input type=\"hidden\" name=\"movieId\" value={movieId} />\n            <input type=\"submit\" value=\"削除\" className=\"deleteBtn\" />\n          </form>   \n        } \n\n      </div>\n    </div>\n       \n    )\n\n  }\n \n  render() {\n    return (\n      <React.Fragment>\n        <HeaderA />\n        {this.renderDetail()}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({movie : state.movie, loginUserId : state.auth})\nconst mapDispatchToProps = ({ readMovieDetail,deleteMovie })\nexport default connect(mapStateToProps, mapDispatchToProps)(reduxForm({form: 'deleteMovieForm2'})(Detail));\n\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nclass Auth extends Component{\n  render() {\n    return(\n      this.props.loginUserId ? this.props.children : <Redirect to={'/login'} />\n    )\n  }\n}\nconst mapStateToProps = state => ({loginUserId : state.auth})\nexport default connect(mapStateToProps, null)(Auth);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport HeaderA from './headerA';\n\nconst Result = () => {\n      return(\n        <React.Fragment>\n          <HeaderA/>\n          <div className=\"resultBox\">\n            <p className=\"success\">会員登録が完了しました。</p>\n            <Link to=\"/login\" className=\"goBackLogin\">ログイン画面へ</Link>\n          </div>\n        </React.Fragment>\n      )\n}\n\nexport default Result;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk'\nimport reducer from './reducers';\n\n// import { composeWithDevTools } from 'redux-devtools-extension'\n\nimport './css/reset.css';\nimport './css/bootstrap.min.css';\nimport './css/application.css';\nimport './css/index.css';\nimport './css/top.css';\nimport './css/signin.css';\nimport './css/upload.css';\nimport './css/user.css';\nimport './css/search.css';\nimport './css/detail.css';\nimport './css/result.css';\n\n\n\nimport { BrowserRouter, Route, Switch} from 'react-router-dom'\nimport Top from './components/top'\nimport Login from './components/login';\nimport RegistrationForm from './components/RegistrationForm';\nimport MovieIndex from './components/movie_index';\nimport Upload from './components/upload';\nimport User from './components/user';\nimport Search from './components/search';\nimport Detail from './components/detail';\nimport Auth from './components/auth';\nimport Result from './components/result';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducer,applyMiddleware(thunk))\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component= {Top} />\n          <Route exact path=\"/top\" component= {Top} />\n          <Route path=\"/index\" component= {MovieIndex} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/RegistrationForm\" component={RegistrationForm} />\n          <Route path=\"/user/:id\" component={User} />\n          <Route path=\"/search\" component={Search} />\n          <Route path=\"/video/:id\" component={Detail} />\n          <Route path=\"/result\" component={Result} />\n          <Auth>\n            <Route path=\"/upload\" component={Upload} />\n          </Auth>\n        </Switch>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}